load time.maude
*** FMODS
fmod ID is 
  pr STRING .
  sort Id .
  op id : String -> Id [ctor] .
endfm 

fmod FLOW is 
  pr ID .
  pr POSRAT-TIME-DOMAIN-WITH-INF .

  sort Flow .
  op flow : Id Time -> Flow [ctor] .
 
endfm 

fmod TOKEN is
  pr ID .
  pr POSRAT-TIME-DOMAIN-WITH-INF .
  sort Token .
  op token : Id Time -> Token [ctor] .
  
endfm

fmod RESOURCE is
    pr ID .
    sort Resource .
    op resource : Id Nat Nat -> Resource [ctor] .
    
endfm

fmod NODE is 
  pr SET{Id} .
  pr GATEWAY .
  pr STRING .
  pr POSRAT-TIME-DOMAIN-WITH-INF .
  
  sort Node .

  op start : Id Id -> Node [ctor] .
  op end : Id Id -> Node [ctor] .
  op task : Id String Id Id Time Set{Id} -> Node [ctor] .
  op split : Id  Gateway Id Set{Id} -> Node [ctor] .
  op merge : Id Gateway Set{Id} Id -> Node [ctor] .

endfm

fmod GATEWAY is
    sort Gateway .
    op exclusive : -> Gateway [ctor] .
    op parallel : -> Gateway [ctor] .
endfm

**** VISTAS
view Flow from TRIV to FLOW is 
    sort Elt to Flow .
endv

view Id from TRIV to ID is 
    sort Elt to Id .
endv

view Resource from TRIV to RESOURCE is 
    sort Elt to Resource .
endv

view Token from TRIV to TOKEN is 
    sort Elt to Token .
endv

view Node from TRIV to NODE is 
    sort Elt to Node .
endv




mod BPMPN-SEM is 
    pr POSRAT-TIME-DOMAIN-WITH-INF .
   
    pr SET{Flow} .
    pr SET{Id} .
    pr SET{Resource} .
    pr SET{Node} .
    pr SET{Token} .

    inc CONFIGURATION .
    sort  Process .
    subsort Node < Cid .

    ---- class Process | nodes: Set{Node}, flows: Set{Flow}, tokens: Set{Token}, gtime: Time, resources: Set{Resource} .
    op Process : -> Process .
    op nodes:_ : Set{Node} -> Attribute [gather (&)] .
    op flows:_ : Set{Flow} -> Attribute [gather (&)] .
    op tokens:_ : Set{Token} -> Attribute [gather (&)] .
    op gtime:_ : Time -> Attribute [gather (&)] .
    op resource:_ : Set{Resource} ->  Attribute [gather (&)] . 

endm 